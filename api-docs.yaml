openapi: 3.0.0
info:
  title: My Company API
  description: API Documentation for a MyCompany.
  version: 1.0.0
servers:
  - url: https://compro-api.onrender.com
    description: Production server
  - url: http://localhost:3000/api/v1
    description: Local Development server
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken
      description: Access token stored in httpOnly cookieAuth

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: redaksi@mycompany.com
                password:
                  type: string
                  format: password
                  example: password123
              required:
                - email
                - password
      responses:
        "200":
          description: Successful login, sets httpOnly cookie for tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully logged in
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      email:
                        type: string
                        format: email
                      name:
                        type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /auth/me:
    get:
      tags:
        - Auth
      summary: Get current authenticated user
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Successfully retrieved current user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      email:
                        type: string
                        format: email
                      name:
                        type: string
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /auth/refresh:
    get:
      summary: Refresh access token
      tags: [Auth]
      security:
        - cookieAuth: []
      responses:
        "200":
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully create a new access token
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /auth/logout:
    delete:
      summary: Logout user
      tags: [Auth]
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Successfully logout
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error

  /news:
    get:
      summary: Get all news
      tags: [News]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: q
          in: query
          schema:
            type: string
            description: Search query for news title or content
      responses:
        "200":
          description: A list of news
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      news:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
                            slug:
                              type: string
                            content:
                              type: string
                            published:
                              type: boolean
                            author:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                email:
                                  type: string
                      totalNews:
                        type: integer
                      totalPages:
                        type: integer
                      currentPage:
                        type: integer
        "500":
          description: Internal Server Error
    post:
      summary: Create a news item
      tags: [News]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                published:
                  type: boolean
              required:
                - title
                - content
                - published
      responses:
        "201":
          description: News created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      slug:
                        type: string
                      content:
                        type: string
                      author:
                        type: string
                      published:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      authorId:
                        type: string
                        format: uuid
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /news/{id}:
    get:
      summary: Get a news item by ID
      tags: [News]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: News found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      slug:
                        type: string
                      content:
                        type: string
                      author:
                        type: string
                      published:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      authorId:
                        type: string
                        format: uuid
        "404":
          description: News not found
        "500":
          description: Internal Server Error
    patch:
      summary: Update a news item by ID
      tags: [News]
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                published:
                  type: boolean
      responses:
        "200":
          description: News updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      slug:
                        type: string
                      content:
                        type: string
                      author:
                        type: string
                      published:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      authorId:
                        type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: News not found
        "500":
          description: Internal Server Error
    delete:
      summary: Delete a news item by ID
      tags: [News]
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: News deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully deleted news article
        "401":
          description: Unauthorized
        "404":
          description: News not found
        "500":
          description: Internal Server Error
